package common

// Программа отправки почты получилась довольно сложной, т.к. она выполняет обработку и отправку писем,
// работает с диском и с сетью, ведет логирование и проверяет ограничения перед отправкой
// Из - за такого насыщенного функционала, было принято решение разбить программу на логические части - сервисы
// Сервис - это модуль программы, отвечающий за выполнение одной конкретной задачи, например логирование
// Сервис может сам выполнять эту задачу, либо управлять выполнением задачи

// Сервис требующий инициализиции
// Данные для инициализиции берутся из файла настроек
type Service interface {
	OnInit(*ApplicationEvent)
}

// Сервис получающий событие отправки письма
// Используется сервисами для передачи события друг другу
type EventService interface {
	Events() chan *SendEvent
}

// Сервис принимающий участие в отправке письма
type SendingService interface {
	Service
	EventService
	OnRun()
	OnFinish()
}

// Сервис принимающий участие в агрегации и выводе в консоль писем с ошибками
type ReportService interface {
	Service
	EventService
	OnShowReport()
}

// Сервис перкладывающий письма из очереди в очередь
type PublishService interface {
	Service
	OnPublish(*ApplicationEvent)
}

// Сервис ищущий записи в логе по письму
type GrepService interface {
	Service
	OnGrep(*ApplicationEvent)
}
